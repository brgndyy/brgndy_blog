name: Docker build and push

on:
  push:
    branches:
      - main
    paths:
      - "front/src/**"
      - "backend/src/**"

jobs:
  path_changes:
    runs-on: ubuntu-latest
    outputs:
      front: ${{ steps.filter.outputs.front }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            front:
              - 'front/src/**'
            backend:
              - 'backend/src/**'

  build_and_push_frontend:
    needs: path_changes
    if: needs.path_changes.outputs.front == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Meta for Frontend
        id: docker_meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: brgndy/brgndy_dev_blog_front

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta_frontend.outputs.tags }}
          labels: ${{ steps.docker_meta_frontend.outputs.labels }}
          no-cache: true
          build-args: |
            DEFAULT_BACKEND_URL=${{ secrets.DEFAULT_BACKEND_URL }}
            NEXT_PUBLIC_SIGN_UP_SECRET_KEY=${{ secrets.NEXT_PUBLIC_SIGN_UP_SECRET_KEY }}
            NEXT_PUBLIC_LOGIN_SECRET_KEY=${{ secrets.NEXT_PUBLIC_LOGIN_SECRET_KEY }}
            NEXT_PUBLIC_DEFAULT_BACKEND_URL=${{ secrets.NEXT_PUBLIC_DEFAULT_BACKEND_URL }}

      - name: EC2 Front Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_FRONT_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_FRONT_KEY }}
          script: |
            docker stop brgndy_blog_front || true
            docker rm brgndy_blog_front || true
            docker pull brgndy/brgndy_dev_blog_front:main
            docker run --name brgndy_blog_front --rm -d -p 3000:3000 brgndy/brgndy_dev_blog_front:main

  build_and_push_backend:
    needs: path_changes
    if: needs.path_changes.outputs.backend == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Meta for Backend
        id: docker_meta_backend
        uses: docker/metadata-action@v5
        with:
          images: brgndy/brgndy_dev_blog_backend

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta_backend.outputs.tags }}
          labels: ${{ steps.docker_meta_backend.outputs.labels }}
          no-cache: true
          build-args: |
            MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_PORT=${{ secrets.MYSQL_PORT }}
            JWT_SIGNATURE=${{ secrets.JWT_SIGNATURE }}
            BACK_END_NODE_ENV=${{ secrets.BACK_END_NODE_ENV }}

      - name: EC2 Backend Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_BACKEND_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_BACKEND_KEY }}
          script: |
            docker stop brgndy_blog_backend || true
            docker rm brgndy_blog_backend || true
            docker pull brgndy/brgndy_dev_blog_backend:main
            docker run --name brgndy_blog_backend --rm -d -p 80:80 brgndy/brgndy_dev_blog_backend:main
